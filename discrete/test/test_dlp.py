from pytest import raises

from discrete.dlp import pollard_rho


def test_pollard_rho_bad_input():
    pass


def test_pollard_rho_solvable():
    # g, h, p, expected, with g being a primitive root, so a solution is guaranteed.
    cases = [
        (5, 25940, 30757, 24463),
        (3, 1317, 4327, 871),
        (14, 33668, 40429, 30073),
        (7, 58354, 58369, 24432),
        (5, 64346, 94343, 74771),
        (2, 1821, 2699, 715),
        (3, 1908, 36497, 4687),
        (2, 62877, 68909, 4742),
        (2, 3133, 3691, 2509),
        (2, 7319, 54869, 20990),
        (2, 42578, 94949, 41457),
        (3, 8958, 86743, 7192),
        (6, 18737, 27277, 9751),
        (2, 28018, 84059, 31727),
        (5, 5193, 13003, 661),
        (2, 231, 66523, 54522),
        (7, 34094, 53269, 46485),
        (6, 9579, 22039, 13710),
        (11, 821, 28559, 19003),
        (2, 48077, 49277, 20491),
        (2, 61329, 75797, 13863),
        (3, 2654, 49169, 23950),
        (2, 23805, 31259, 6918),
        (3, 8251, 14897, 1211),
        (7, 48678, 79357, 41195),
        (2, 40408, 51421, 16892),
        (5, 1824, 20747, 16565),
        (7, 63868, 72251, 66392),
        (5, 52496, 81647, 60176),
        (7, 40755, 61297, 24295),
        (3, 9224, 32993, 3551),
    ]

    for g, h, p, expected in cases:
        assert pollard_rho(g, h, p) == expected


def test_pollard_rho_non_solvable():
    # g, h, p, with g not being a primitive root and h is not a power of g.
    cases = [
        (8, 8410, 26953),
        (6, 8448, 74197),
        (4, 1262, 18919),
        (4, 25601, 33641),
        (4, 11836, 29129),
        (3, 64248, 72547),
        (3, 12668, 15373),
        (3, 25268, 82421),
        (4, 14961, 60859),
        (7, 1762, 32143),
        (4, 3326, 9257),
        (4, 6002, 26993),
        (4, 17314, 77417),
        (6, 72023, 74857),
        (3, 34309, 95707),
        (4, 35121, 66943),
        (4, 83569, 95621),
        (6, 19980, 47137),
        (3, 3946, 4357),
        (4, 3561, 45557),
        (3, 12591, 65173),
        (6, 33002, 39983),
    ]

    for g, h, p in cases:
        assert pollard_rho(g, h, p) is None
